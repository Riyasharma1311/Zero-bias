"""create patient schema

Revision ID: f8a100955705
Revises: 9b40c06b434a
Create Date: 2025-05-25 16:41:37.179761+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f8a100955705'
down_revision: Union[str, None] = '9b40c06b434a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(timezone=True), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender'), nullable=False),
    sa.Column('ethnicity', sa.Enum('CAUCASIAN', 'AFRICAN_AMERICAN', 'HISPANIC', 'ASIAN', 'NATIVE_AMERICAN', 'OTHER', name='ethnicity'), nullable=True),
    sa.Column('contact_number', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('admission_type', sa.Enum('EMERGENCY', 'URGENT', 'ELECTIVE', 'NEWBORN', 'TRAUMA', name='admissiontype'), nullable=True),
    sa.Column('discharge_location', sa.Enum('HOME', 'SNF', 'REHAB', 'LTAC', 'OTHER', name='dischargelocation'), nullable=True),
    sa.Column('drg_type', sa.Enum('MEDICAL', 'SURGICAL', 'OTHER', name='drgtype'), nullable=True),
    sa.Column('blood_type', sa.Enum('A_POSITIVE', 'A_NEGATIVE', 'B_POSITIVE', 'B_NEGATIVE', 'O_POSITIVE', 'O_NEGATIVE', 'AB_POSITIVE', 'AB_NEGATIVE', name='bloodtype'), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('allergies', sa.String(), nullable=True),
    sa.Column('chronic_conditions', sa.String(), nullable=True),
    sa.Column('current_medications', sa.String(), nullable=True),
    sa.Column('family_history', sa.String(), nullable=True),
    sa.Column('diabetes', sa.Boolean(), nullable=True),
    sa.Column('hypertension', sa.Boolean(), nullable=True),
    sa.Column('chronic_kidney_disease', sa.Boolean(), nullable=True),
    sa.Column('copd', sa.Boolean(), nullable=True),
    sa.Column('coronary_artery_disease', sa.Boolean(), nullable=True),
    sa.Column('atrial_fibrillation', sa.Boolean(), nullable=True),
    sa.Column('ace_inhibitors', sa.Boolean(), nullable=True),
    sa.Column('arbs', sa.Boolean(), nullable=True),
    sa.Column('beta_blockers', sa.Boolean(), nullable=True),
    sa.Column('diuretics', sa.Boolean(), nullable=True),
    sa.Column('mras', sa.Boolean(), nullable=True),
    sa.Column('sglt2_inhibitors', sa.Boolean(), nullable=True),
    sa.Column('emergency_contact_name', sa.String(), nullable=True),
    sa.Column('emergency_contact_number', sa.String(), nullable=True),
    sa.Column('insurance_provider', sa.String(), nullable=True),
    sa.Column('insurance_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patients_id'), 'patients', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('specialization', sa.String(), nullable=True),
    sa.Column('license_number', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'DOCTOR', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('medical_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('record_type', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('mime_type', sa.String(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medical_records_id'), 'medical_records', ['id'], unique=False)
    op.create_index(op.f('ix_medical_records_record_type'), 'medical_records', ['record_type'], unique=False)
    op.create_index(op.f('ix_medical_records_recorded_at'), 'medical_records', ['recorded_at'], unique=False)
    op.create_table('patient_doctors',
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('patient_id', 'doctor_id')
    )
    op.create_table('patient_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('drg_code', sa.String(), nullable=False),
    sa.Column('drg_description', sa.String(), nullable=True),
    sa.Column('drg_severity', sa.Integer(), nullable=True),
    sa.Column('drg_mortality', sa.Integer(), nullable=True),
    sa.Column('cpt_codes', sa.JSON(), nullable=True),
    sa.Column('icd9_codes', sa.JSON(), nullable=True),
    sa.Column('procedure_pairs', sa.JSON(), nullable=True),
    sa.Column('lab_events', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patient_reports_id'), 'patient_reports', ['id'], unique=False)
    op.create_table('risk_assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('heart_attack_risk', sa.Float(), nullable=True),
    sa.Column('stroke_risk', sa.Float(), nullable=True),
    sa.Column('cardiovascular_age', sa.Float(), nullable=True),
    sa.Column('factors_considered', sa.String(), nullable=False),
    sa.Column('recommendations', sa.String(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('assessed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('assessed_by', sa.Integer(), nullable=True),
    sa.Column('model_version', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['assessed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_risk_assessments_assessed_at'), 'risk_assessments', ['assessed_at'], unique=False)
    op.create_index(op.f('ix_risk_assessments_id'), 'risk_assessments', ['id'], unique=False)
    op.create_table('vital_signs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('measured_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('heart_rate', sa.Float(), nullable=True),
    sa.Column('blood_pressure_systolic', sa.Float(), nullable=True),
    sa.Column('blood_pressure_diastolic', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('respiratory_rate', sa.Float(), nullable=True),
    sa.Column('oxygen_saturation', sa.Float(), nullable=True),
    sa.Column('measured_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['measured_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vital_signs_id'), 'vital_signs', ['id'], unique=False)
    op.create_index(op.f('ix_vital_signs_measured_at'), 'vital_signs', ['measured_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vital_signs_measured_at'), table_name='vital_signs')
    op.drop_index(op.f('ix_vital_signs_id'), table_name='vital_signs')
    op.drop_table('vital_signs')
    op.drop_index(op.f('ix_risk_assessments_id'), table_name='risk_assessments')
    op.drop_index(op.f('ix_risk_assessments_assessed_at'), table_name='risk_assessments')
    op.drop_table('risk_assessments')
    op.drop_index(op.f('ix_patient_reports_id'), table_name='patient_reports')
    op.drop_table('patient_reports')
    op.drop_table('patient_doctors')
    op.drop_index(op.f('ix_medical_records_recorded_at'), table_name='medical_records')
    op.drop_index(op.f('ix_medical_records_record_type'), table_name='medical_records')
    op.drop_index(op.f('ix_medical_records_id'), table_name='medical_records')
    op.drop_table('medical_records')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_patients_id'), table_name='patients')
    op.drop_table('patients')
    # ### end Alembic commands ### 